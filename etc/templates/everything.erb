<% coreconfig="
	ServerName everything2.com
	ServerAlias www.everything2.com
	ServerAlias everything2.net
	ServerAlias www.everything2.net
	ServerAlias everything2.org
	ServerAlias www.everything2.org
	ServerAdmin e2webmaster@everything2.com
	
	DocumentRoot /var/everything/www

        <IfDefine PERLDB>
                <Perl>
                        use Apache::DB ();
                        Apache::DB->init;
                </Perl>

                <Location />
                        PerlFixupHandler Apache::DB
                </Location>
        </IfDefine>

        <Perl>
		use CGI qw(-utf8);
        </Perl>

	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>

	# Make sure that processes in production never stray above 800M
        <Perl>
        use Apache2::SizeLimit;
        $Apache2::SizeLimit::MAX_PROCESS_SIZE  = 800000;
        $Apache2::SizeLimit::CHECK_EVERY_N_REQUESTS = 20;
        </Perl>

        PerlCleanupHandler Apache2::SizeLimit

	PerlPassEnv AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
	PerlPassEnv AWS_DEFAULT_REGION
	PerlPassEnv E2_DOCKER
	PerlPassEnv E2_MAINTENANCE_MESSAGE
	PerlPassEnv E2_DBSERV

	PerlModule Apache2::compat Apache::DBI CGI Everything Everything::HTML
	PerlResponseHandler ModPerl::Registry
	PerlOptions +ParseHeaders
"

econfig='/etc/everything'

coreconfig+="\t\# Explicit IP address bans\n"
if File.exist?("#{econfig}/banned_ips_secret")
  JSON.parse(File.read("#{econfig}/banned_ips_secret")).each do |ip|
    coreconfig+="\tSetEnvIf X-FORWARDED-FOR \"#{ip}\" denyip\n"
  end
end

coreconfig+="\t\# IP address block bans\n"
if File.exist?("#{econfig}/banned_ipblocks_secret")
  JSON.parse(File.read("#{econfig}/banned_ipblocks_secret")).each do |block|
    coreconfig+="\tSetEnvIf X-FORWARDED-FOR ^#{block.gsub(".","\\.")} denyip\n"
  end
end

coreconfig+="\t\# User agent bans\n"
if File.exist?("#{econfig}/banned_user_agents_secret")
  JSON.parse(File.read("#{econfig}/banned_user_agents_secret")).each do |ua|
    coreconfig+="\tBrowserMatchNoCase #{ua} denyip\n"
  end
end

rotatelogs = '/usr/bin/rotatelogs'

coreconfig+="
	<Directory /var/everything/www/>
		DirectoryIndex index.pl
		AddHandler perl-script .pl
		Options +ExecCGI +FollowSymLinks
		AllowOverride None
		Order allow,deny
		allow from all

		deny from env=denyip

		RewriteEngine On

		RewriteCond %{HTTP:X-Forwarded-Proto} =http
		RewriteRule (.*)                           https://%{HTTP_HOST}/$1 [R=301,L]

		RewriteRule ^node/(\\d+)/(\\w+)/?$           index.pl?node_id=$1&displaytype=$2  [QSA]
		RewriteRule ^node/(\\d+)([^&]*)/?$          index.pl?node_id=$1$2               [QSA]
		RewriteRule ^e2node/(.+)                   /title/$1                           [R]
		RewriteRule ^node/([^\\d][^/]*)$            /title/$1                           [R]

		RewriteRule ^node/([^\\W\\/]+)/([^&]+).*/?$  index.pl?node=$2&type=$1            [QSA]
		RewriteRule ^title/([^&]+).*/?$            index.pl?node=$1                    [QSA]

		RewriteRule ^user/([^&]+)/writeups/([^&]+).*/?$   index.pl?node=$2&type=writeup&author=$1      [QSA]

		#Ugh, this rule needs to be made prettier
		RewriteRule ^user/([^&]+)/writeups/?$      index.pl?node=everything+user+search&type=superdoc&usersearch=$1&orderby=node.createtime+DESC   [QSA]
		RewriteRule ^user/([^&]+).*/?$             index.pl?node=$1&type=user          [QSA]

		RewriteRule ^favicon.ico$		   http://static.everything2.com/favicon.ico [P]

		RewriteCond %{HTTP_HOST}                   ^m\\.everything2.+  [NC]
		RewriteCond %{QUERY_STRING}                ^$
		RewriteRule ^/?$                           /index.pl?node=Welcome+to+Everything

		# Add short URL redirection$
		RewriteRule ^/?s/([^/]+)$                  index.pl?type=superdoc&node=Short+URL+Lookup&short_string=$1

		# Redirect weird recurring RDF request to somewhere useful
		RewriteRule ^/?heaedlines.rdf$             index.pl?type=ticker&node=New+Writeups+Atom+Feed

		RewriteCond %{REQUEST_FILENAME}            !-f
		RewriteRule ^/?stylesheet/([^_]+)_v[0-9]+(_autofix)?\\.css      /stylesheet/$1$2.css  [R=307]

		RewriteRule ^/?sitemap/(.+)$		   http://sitemap.everything2.com/$1 [P]

		AddOutputFilterByType DEFLATE text/javascript text/html text/xml text/css application/x-javascript
	</Directory>

        ScriptAliasMatch /api/.* /var/everything/www/api/index.pl
        <Directory /var/everything/www/api/>
                DirectoryIndex index.pl
                AddHandler perl-script .pl
                Options +ExecCGI +FollowSymLinks
                AllowOverride None
                Order allow,deny
                allow from all

                deny from env=denyip
        </Directory>

        <IfDefine E2_DEVELOPMENT>
          ErrorLog \"|#{rotatelogs} -f /var/log/apache2/e2.error.%Y%m%d%H.log 3600\"
          CustomLog \"|#{rotatelogs} -f /var/log/apache2/e2.access.%Y%m%d%H.log 3600\" cloudwatch env=!dontlog
        </IfDefine>

	ServerSignature On"

%>
<%=coreconfig %>
