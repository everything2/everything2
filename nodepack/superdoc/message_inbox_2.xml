<node>
  <doctext>&lt;table&gt;
[%

my $UID = getId($USER)||0;

return '&lt;tr&gt;&lt;td&gt;If you had an account, you\'d get messages.&lt;/td&gt;&lt;/tr&gt;' if $APP-&gt;isGuest($USER);

my $isRoot = $APP-&gt;isAdmin($USER);

#N-Wing converted to using varcheckbox, and moved to options part
## if this page has been submitted...
#if(defined($query-&gt;param('message send'))) {
#	#...any changes to the checkbox should be reflected in $VARS...
#	if(defined($query-&gt;param('autofill'))) {
#		$VARS-&gt;{autofillInbox} = 1;
#	} else {
#		delete $$VARS{autofillInbox};
#	}
#} else {
#	#...otherwise, let $VARS dictate the state of the checkbox
#	if(exists($VARS-&gt;{autofillInbox})) {
#		$query-&gt;param('autofill', 'on');
#	}
#}

my $showStart = 0;
my $numShow = 0;
my $foruser = '';
my $olduser = '';

my $str='';
#$str.= htmlcode('openform').'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'.htmlcode('varcheckbox','sortmyinbox,Sort my messages in message inbox').'&lt;br /&gt;&lt;input type=&quot;submit&quot; value=&quot;Change Now&quot;&gt;&lt;/form&gt;';

$str .= '&lt;form name=&quot;message_inbox_form&quot; method=&quot;POST&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;op&quot; value=&quot;message&quot;&gt;';
$str .= '&lt;input type=&quot;hidden&quot; name=&quot;node_id&quot; value=&quot;'.getId($NODE).'&quot;&gt;';
$str .= $query-&gt;hidden('sexisgood','1');	#so auto-VARS changing works
{
	#for some reason, we're doing everything in a table; this at least make the options part a little easier
	my @opts;
#	push @opts, $query-&gt;checkbox(-name=&gt;'autofill', -label=&gt;'Autofill Recipient');
	push @opts, htmlcode('varcheckbox','autofillInbox,Autofill recipient');
	push @opts, htmlcode('varcheckbox','sortmyinbox,Sort messages by usergroup');
	push @opts, 'only show from user '  . $query-&gt;textfield(-name=&gt;'fromuser')  . ', or do the inverse: ' . $query-&gt;checkbox(-name=&gt;'notuser' ,-label=&gt;'hide from this user');
	push @opts, 'only show from group ' . $query-&gt;textfield(-name=&gt;'fromgroup') . ', or do the inverse: ' . $query-&gt;checkbox(-name=&gt;'notgroup',-label=&gt;'hide to this group' );

#N-Wing made this sticky
#	push @opts, 'archived/unarchived messages: '.$query-&gt;popup_menu(-name=&gt;'arcunarc', -values=&gt;['all','archived','unarchived'], -default=&gt;'all'); 
	push @opts, 'archived/unarchived messages: ' . htmlcode('varsComboBox', 'msginboxUnArc,0, 0,all, 1,unarchived, 2,archived');

	$str .= '&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;Options&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;'.&quot;\n&quot;;
	foreach(@opts) {
		$str .= '&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;' . $_ . &quot;&lt;/td&gt;&lt;/tr&gt;\n&quot;;
	}
}

#show archived/unarchived things
my $sqlFilterArc='';	#default of no filtering
if( (exists $VARS-&gt;{msginboxUnArc}) &amp;&amp; (defined $VARS-&gt;{msginboxUnArc}) ) {
	my $v=$VARS-&gt;{msginboxUnArc};
	if($v eq '1') {
		$sqlFilterArc=' AND archive=0';
	} elsif($v eq '2') {
		$sqlFilterArc=' AND archive!=0';
	}
}


if($isRoot) {

if(defined($query-&gt;param('spy_user'))) {

	#FIXME after the bot setting is set: get info from there instead
	my @okaytospy = ($$USER{title}, 'Webster 1913', 'EDB', 'Klaproth', 'Cool Man Eddie', 'Guest User', 'recipe', 'Grease Monkey', 'Content_Salvage');
	my $okay;
	$$okay{getId(getNode($_, 'user'))} = 1 foreach(@okaytospy);

	$foruser = getNode(scalar($query-&gt;param('spy_user')), 'user');

	unless(defined $foruser){

		$foruser = $USER;
		$str .= '&lt;tr&gt;&lt;td&gt;&lt;small&gt;(No such user ['.$query-&gt;param('spy_user').'])&lt;/small&gt;&lt;/tr&gt;&lt;/td&gt;';

	} 
     
	$foruser = $USER unless(exists $$okay{$$foruser{node_id}});

} else {
	$foruser = $USER;
}



$str .= '&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;Message Inbox for: &lt;select name=&quot;spy_user&quot;&gt;&lt;option value=&quot;'.$$foruser{title}.'&quot;&gt;'.$$foruser{title}.'&lt;/option&gt;';

if(getId($foruser) != $UID){  $str .= '&lt;option value=&quot;'.$$USER{title}.'&quot;&gt;'.$$USER{title}.'&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Cool Man Eddie', 'user'))){ $str .= '&lt;option value=&quot;Cool Man Eddie&quot;&gt;Cool Man Eddie&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Guest User', 'user'))){ $str .= '&lt;option value=&quot;Guest User&quot;&gt;Guest User&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('EDB', 'user'))){ $str .= '&lt;option value=&quot;EDB&quot;&gt;EDB&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Klaproth', 'user'))){ $str .='&lt;option value=&quot;Klaproth&quot;&gt;Klaproth&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Webster 1913', 'user'))){ $str .='&lt;option value=&quot;Webster 1913&quot;&gt;Webster 1913&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('recipe', 'user'))){ $str .='&lt;option value=&quot;Recipe&quot;&gt;Recipe&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Grease Monkey', 'user'))){ $str .='&lt;option value=&quot;Grease Monkey&quot;&gt;Grease Monkey&lt;/option&gt;';}

if(getId($foruser) != getId(getNode('Content_Salvage', 'user'))){ $str .='&lt;option value=&quot;Content_Salvage&quot;&gt;Content_Salvage&lt;/option&gt;';}

$str .='&lt;/select&gt;&lt;/tr&gt;&lt;/td&gt;';

} else {
	$foruser = $USER;
}
#########originally All jay in here:

my $sqlSortInboxNotUG='';	#non-usergroups
if($$VARS{sortmyinbox}) {
	my $csr = $DB-&gt;sqlSelectMany('nodegroup_id', 'nodegroup', &quot;node_id=$UID&quot;);

	my $typ = getId(getType('usergroup'));
	my $groups;

	while( my $row = $csr-&gt;fetchrow_hashref) {
		my $n = getNodeById($$row{nodegroup_id});
		next unless($$n{type_nodetype} == $typ);

		$$groups{$$n{title}} = $$n{node_id};
	}

	$$groups{'Content Editors'} = getId(getNode('Content Editors', 'usergroup')) if $isRoot;

	my $sqlq;

	foreach(keys(%$groups)) {
#		my $num = $DB-&gt;sqlSelect('count(*)', 'message', &quot;for_user=$$foruser{user_id} AND for_usergroup=$$groups{$_} AND archive=0&quot;);
		$sqlq = &quot;for_user=$$foruser{user_id} AND for_usergroup=$$groups{$_}&quot;;
		$sqlq .= $sqlFilterArc if length($sqlFilterArc);
		my $num = $DB-&gt;sqlSelect('count(*)', 'message', $sqlq);

		my $tempstr = &quot;&lt;small&gt;$_: $num&lt;/small&gt;&quot;;

		$tempstr = '&lt;strong&gt;&lt;big&gt;'.$tempstr.'&lt;/big&gt;&lt;/strong&gt;'; #if($num &gt; 0);
		$str.= '&lt;a href='.urlGen({'fromgroup'=&gt;$_, 'node_id'=&gt;$$NODE{node_id}}).&quot;&gt;$tempstr&lt;/a&gt;&lt;br /&gt;\n&quot; if($num &gt; 0);
	}

	#deal with non-usergroup for_usergroup stuff
	#this is rather ugly
	{
		#creates: (for_usergroup!=838015 AND for_usergroup!=923653 AND (etc.))

		$sqlq = &quot;for_user=$$foruser{user_id}&quot;;

		if(scalar(keys(%$groups))) {
                        #jb says I removed the extra AND. we have one down below
                        #map in void context. Use foreach.  
                        #Plus this doesn't form the string correctly
			$sqlSortInboxNotUG = join(' OR ', map{ 'for_usergroup='.$_ } values(%$groups));
                        #$sqlSortInboxNotUG.= &quot; AND NOT for_usergroup=$_ &quot;, foreach(values(%$groups)).' ';
#		$sqlq .= $sqlSortInboxNotUG;

##ick, this is bad...
#$sqlSortInboxNotUG='';
#foreach(values(%$groups)) {
#$sqlSortInboxNotUG .= ' AND ' if length($sqlSortInboxNotUG);
#$sqlSortInboxNotUG .= 'for_usergroup!='.$_;
#}

			if(length($sqlSortInboxNotUG)) {
				$sqlSortInboxNotUG = ' AND NOT (' . $sqlSortInboxNotUG.')';
				$sqlq .= $sqlSortInboxNotUG;
			}

		}

		$sqlq .= $sqlFilterArc if length($sqlFilterArc);

#if($$USER{node_id}==9740) {
#$DB-&gt;sqlInsert('message',{'for_user'=&gt;9740, 'msgtext'=&gt;$sqlq, author_user=&gt;$UID});
#$DB-&gt;sqlInsert('message',{'for_user'=&gt;9740, 'msgtext'=&gt;substr($sqlq,255), author_user=&gt;$UID}) if length($sqlq)&gt;255;
#$DB-&gt;sqlInsert('message',{'for_user'=&gt;9740, 'msgtext'=&gt;substr($sqlq,511), author_user=&gt;$UID}) if length($sqlq)&gt;511;
#}

		my $num = $DB-&gt;sqlSelect('count(*)', 'message', $sqlq);

		my $tempstr = &quot;&lt;small&gt;other: $num&lt;/small&gt;&quot;;

		$tempstr = '&lt;strong&gt;&lt;big&gt;'.$tempstr.'&lt;/big&gt;&lt;/strong&gt;'; #if($num &gt; 0);
		$str.= '&lt;a href='.urlGen({'node_id'=&gt;$$NODE{node_id}}).&quot;&gt;$tempstr&lt;/a&gt;&lt;br /&gt;\n&quot; if($num &gt; 0);
	}

#	$str .= '('.linkNode($NODE, $DB-&gt;sqlSelect('count(*)', 'message', &quot;for_user=$$foruser{user_id} AND archive=0&quot;).&quot; unarchived messages total&quot;).&quot;)&lt;br /&gt;\n&quot;;
	$sqlq = &quot;for_user=$$foruser{user_id}&quot;;
	$sqlq .= $sqlFilterArc if length($sqlFilterArc);
	$str .= '('.linkNode($NODE, $DB-&gt;sqlSelect('count(*)', 'message', $sqlq).' messages total').&quot;)&lt;br /&gt;\n&quot;;

	$str .= '&lt;br /&gt;';

	#return $str;
}


my $limits = 'for_user='.getId($foruser);



my $colHeading = '&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;delete&lt;/th&gt;&lt;th&gt;send time&lt;/th&gt;&lt;th colspan=&quot;2&quot; align=&quot;right&quot;&gt;&amp;#91;un&amp;#93;Archive&lt;/th&gt;&lt;/tr&gt;'.&quot;\n&quot;;
$str .= $colHeading;

#TODO have an htmlcode that constructs the query, so XML ticker and showmessages doesn't have to dupe code
my $notUser =($query-&gt;param('notuser')  ? 1 : 0);
my $notGroup=($query-&gt;param('notgroup') ? 1 : 0);
my $filterUser;	#user object, or 0 if none
my $filterGroup;	#group object, or 0 if none
my $filterUID=0;	#user ID, or 0 if none
my $filterGID=0;	#group ID, or 0 if none

if($filterUser=$query-&gt;param('fromuser')) {
	$filterUser = getNode($filterUser, 'user');
	$filterUID = $$filterUser{node_id} if $filterUser;
}
if($filterGroup=$query-&gt;param('fromgroup')) {
	$filterGroup = getNode($filterGroup, 'usergroup') || getNode($filterGroup, 'user');
	$filterGID = $$filterGroup{node_id} if $filterGroup;
}
$filterUser ||= 0;
$filterGroup ||= 0;
$limits .= ' AND author_user'.($notUser?'!=':'=').$filterUID if $filterUser;
$limits .= ' AND for_usergroup'.($notGroup?'!=':'=').$filterGID if ($filterGID || $notGroup);
#$limits .= ' AND for_usergroup=0' if (!($filterGID) &amp;&amp; $$VARS{sortmyinbox});
$limits .= $sqlSortInboxNotUG if $$VARS{sortmyinbox} &amp;&amp; !$filterGID &amp;&amp; length($sqlSortInboxNotUG);
$limits .= $sqlFilterArc if length($sqlFilterArc);

#TODO - LIMIT x,y
my $showLimit='LIMIT ';
my $showMax = scalar($query-&gt;param('showmax')) || $$VARS{inboxMax} || 0;
$showMax = 0 unless ($showMax =~ /[0-9]+/);
$showLimit= ' LIMIT '.$showMax if $showMax;

#debugging here
#return &quot;&lt;p&gt;$limits&lt;/p&gt;&quot;;

my $csr = $DB-&gt;sqlSelectMany('*', 'message', $limits, 'ORDER BY tstamp LIMIT 10');

my $flag = 0;
my $t;
my @chkboxes;
my $talker;	#author of current message
my $ug;	#usergroup current message is for

while(my $MSG = $csr-&gt;fetchrow_hashref) {
	++$flag;
	my $text = $$MSG{msgtext};
	#FIXME show no user error message, like we do for bad usergroups (instead of just skipping the message)
	$talker = $$MSG{author_user};
	getRef($talker);
	next unless($talker);

	(my $name = $$talker{title}) =~ tr/ /_/;

	#this should prevent punctuation chars in nicks from breaking our HTML
#	$text = encodeHTML($text);
	$text =~ s/\&lt;/&amp;lt;/g;
	$text =~ s/\&gt;/&amp;gt;/g;
	$text =~ s/\[([^\]]*?)$/&amp;#91;$1/;	#dangling [ fixer	#]
        $text =~ s/\[\]/\]/g;                     #parse [] glitch fixer
	$name = encodeHTML($name);
	my $chkboxname = 'deletemsg_'.$$MSG{message_id};
	push @chkboxes, $chkboxname;

	$str.= '&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;'. #$query-&gt;checkbox($chkboxname, '', 'yup', ' ');
	'&lt;input type=&quot;checkbox&quot; name=&quot;'.$chkboxname.'&quot; VALUE=&quot;yup&quot;&gt;'; # $query-&gt;textbox creates a newline after the tag, which messes up the table
#	$str.= &quot;&lt;td&gt;&lt;a onmouseover='replyTo(\&quot;$name\&quot;)' onclick='replyTo(\&quot;$name\&quot;)' href='#box'&gt;reply&lt;/a&gt;&lt;/td&gt;&quot;;

#Jay's fix for usernames with a single quote in them...

local *eddiereply = sub {
my $splitStr1=getNodeById($UID);
$splitStr1=$$splitStr1{title}.', ';
$splitStr1 =~ s/(\W)/\\$1/g; #weird chars in U/N were causing regex errs.  WTF? --N
my $splitStr2=' just cooled';
my @tempsplit = split($splitStr1,$text);
@tempsplit= split($splitStr2,$tempsplit[1]);
my $eddie = $tempsplit[0];
$eddie =~ s/\[//g;
$eddie =~ s/\]//g;
return $eddie;
};


my $safename = $name;
$safename = eddiereply() if ($safename eq &quot;Cool_Man_Eddie&quot;);
$safename =~ s/'/&amp;\#39;/g;
$safename =~ s/&quot;/&amp;\#34;/g;

#	$str .= &quot;&lt;input type='button' value='Reply' onmouseover='replyTo(\&quot;$safename\&quot;, 0)' onClick='replyTo(\&quot;$safename\&quot;, 1)'&gt;&lt;/td&gt;&lt;td&gt;&lt;small&gt;&amp;nbsp;&quot;;

	$str.=&quot;(&lt;a onmouseover='replyTo(\&quot;$safename\&quot;,0)' href='javascript:replyTo(\&quot;$safename\&quot;,1)'&gt;r&lt;/a&gt;)&quot;;
$ug = $$MSG{for_usergroup} || 0;
unless($ug==0) {
getRef($ug);
(my $safeug = $$ug{title}) =~ tr/ /_/;
$safeug =~ s/'/&amp;\#39;/g;
$safeug =~ s/&quot;/&amp;\#34;/g;
$str.=&quot;(&lt;a onmouseover='replyTo(\&quot;$safeug\&quot;,0)' href='javascript:replyTo(\&quot;$safeug\&quot;,1)'&gt;ra&lt;/a&gt;)&quot;;
}
$str.=&quot;&lt;/td&gt;&lt;td&gt;&lt;small&gt;&amp;nbsp;&quot;;

	$t = $$MSG{tstamp};
	$str .= substr($t,0,4).'.'.substr($t,5,2).'.'.substr($t,8,2).'&amp;nbsp;at&amp;nbsp;'.substr($t,11,2).':'.substr($t,14,2);

	$str .= '&lt;/small&gt;&lt;/td&gt;&lt;td&gt;';

	$ug = $$MSG{for_usergroup} || 0;
	unless($ug==0) {
		$ug = getNodeById($ug);
		if(defined $ug) {
			$str .= '('.linkNode($ug,0,{lastnode_id=&gt;0}).') ';
		} else {
			$str .= '(no user or group with ID of '.$$MSG{for_usergroup}.') ';
		}
	}

	#changes literal '\n' into HTML breaks (slash, then n; not a newline)
	$text =~ s/\s+\\n\s+/&lt;br \/&gt;/g;

	#$str .= '&lt;em&gt;'.linkNode($talker).' says&lt;/em&gt; '.parseLinks($text) . '&lt;/td&gt;';
        $str .= '&lt;em&gt;'.linkNode($talker).' says&lt;/em&gt; '.$text. '&lt;/td&gt;';

	$str .= '&lt;td&gt;&lt;tt&gt;'.($$MSG{archive}?'A':'&amp;nbsp;').'&lt;/tt&gt;&lt;input type=&quot;checkbox&quot; value=&quot;yup&quot; name=&quot;' . ($$MSG{archive} ? 'un' : '') . 'archive_' . $$MSG{message_id} . '&quot; /&gt;&lt;/td&gt;';

	$str .= &quot;&lt;/tr&gt;\n&quot;;
}
$csr-&gt;finish();

$str .= $colHeading;

$str .= '&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;';
if($flag) {
	#at least 1 message showing
	$str .= &quot;You have $flag messages total&quot;;
	my @allFilters;	#all filters that are being used
	push( @allFilters, (($notUser? 'not':'').' from '         .linkNode($filterUser )) ) if $filterUser;
	push( @allFilters, (($notGroup?'not':'').' sent to group '.linkNode($filterGroup)) ) if $filterGroup;
	$str .= ' that are '.join(' and ',@allFilters) if scalar(@allFilters);
	$str .= '.';
} else {
	#no messages showing
	$str .= '&lt;em&gt;You feel lonely.&lt;/em&gt;';
}
$str .= '&lt;/td&gt;&lt;/tr&gt;';

$str .= '&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;' . $query-&gt;reset('Clear All') . ' &lt;input type=&quot;button&quot; value=&quot;Clear Reply&quot; onClick=&quot;clearReply();&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;Check All&quot; onClick=&quot;checkAll();&quot;&gt;';
if( (exists $VARS-&gt;{msginboxUnArc}) &amp;&amp; (defined $VARS-&gt;{msginboxUnArc}) ) {
$str.='&lt;input type=&quot;button&quot; value=&quot;'.( $VARS-&gt;{msginboxUnArc} eq '2' ? 'Una' : 'A').'rchive All&quot; onClick=&quot;ArchiveAll();&quot;&gt;&lt;/td&gt;&lt;/tr&gt;';
}

# don't use $query-&gt;textfield() here, because sticky forms make things
# really ugly if you happen to write something in the Chatterbox
# don't blame me, i'm just the babysitter
# N-Wing says: why not just clear it via $query-&gt;delete('message'); ?
$str .= '&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;i&gt;'.$query-&gt;param('sentmessage').'&lt;/i&gt;&lt;/td&gt;&lt;/tr&gt;' if $query-&gt;param('sentmessage');
$str .= '&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;a name=&quot;box&quot;&gt;'.(($$VARS{mitextarea} == 1)?('&lt;textarea name=&quot;message&quot; rows=&quot;8&quot; cols=&quot;35&quot;&gt;&lt;/textarea&gt;'):('&lt;input type=&quot;text&quot; name=&quot;message&quot; value=&quot;&quot; size=&quot;40&quot; maxlength=&quot;255&quot;&gt;')) unless $$VARS{'borged'};
$str .= ' '.$query-&gt;submit('message send', 'submit') . &quot;\n&lt;/td&gt;&lt;/tr&gt;&quot;;
# $str .= '&lt;tr&gt;&lt;td&gt;' . $query-&gt;reset('Clear All') . &quot;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&quot;;

$str .= $query-&gt;end_form();

$str;
%]
&lt;/table&gt;</doctext>
  <node_id>1798778</node_id>
  <title>Message Inbox 2</title>
  <type_nodetype>14</type_nodetype>
</node>
